
import java.util.Scanner;
public class SplitSum extends DynamicArray
{
	/**
	 * PROBLEM 2
	 * Program to determine if the list can be split into two in such a way that the sum of the
     * numbers on the left is equal to the sum of the numbers on the right.
	 */
	public static void main(String[] args) 
	{
	
		DynamicArray arrayDynamic = new DynamicArray();
	
		// take the number of rows
		Scanner input= new Scanner(System.in);
		int iter = input.nextInt();
		int cases,z,i;
		long total,total_half,sum;
	
		//int iter_int = Integer.parseInt(iter);
		for(z=0;z<iter;z++)
	    {
			// number of cases in a row
			cases = input.nextInt();
			total=0;
			
			for(i=0;i<cases;i++)
			{
				int number=input.nextInt();
				// append all numbers to dynamic array
				arrayDynamic.append(number);
				// sum all the input values
				total+=number;
			}
			
			// If the sum of the elements is odd they cannot have a middle value
			if(total % 2 != 0)
			{
				System.out.println("NO");
				break;
			}
			
			total_half =  total/2;
			sum=0;
			
			// start summing up values from start till end
			// check it with the half of the total if equal its the point of split
			for(i=0;;i++)
			{
				sum+= arrayDynamic.get(i);
				// checking with half of the total
				if(total_half == sum )
				{
					System.out.println("YES");
					break;
				}
				
				if(sum > total_half)
				{
					System.out.println("NO");
					break;
				}
			}
			
			arrayDynamic= new DynamicArray();
	    }
	    
		input.close();
	}
}
